---
- name: Clean temporary (incomplete) scan directories inline with policy
  ansible.builtin.shell: |
    # Remove failed scans older than security_scans_failed_retention_hours
    find {{ security_scans_base_dir }} -name "security-scan-*" -type d -mmin +{{ security_scans_failed_retention_hours * 60 }} -exec rm -rf {} \; 2>/dev/null || true

    # If more still remain exceeding security_scans_failed_retention_count, keep most recent leaving space for another in 04_initialise
    cd {{ security_scans_base_dir }}
    ls -dt security-scan-*/ 2>/dev/null | tail -n +{{ security_scans_failed_retention_count }} | xargs rm -rf 2>/dev/null || true
  become: true
  changed_when: false

- name: Clean completed scan directories inline with policy
  ansible.builtin.shell: |
    set -o pipefail
    # Only completed scan directories matching YYYYMMDD_HHMMSS pattern
    cd {{ security_scans_base_dir }}
    ls -dt [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]/ 2>/dev/null | tail -n +{{ security_scans_retention_count + 1 }} | xargs rm -rf 2>/dev/null || true
  when: security_scans_retention_enabled | bool
  changed_when: false
  become: true
  args:
    executable: /bin/bash

- name: Compress old scan files
  ansible.builtin.shell: |
    find {{ security_scans_base_dir }} -maxdepth 2 -name "*.report" -not -name "*.gz" -exec gzip {} \; 2>/dev/null || true
    find {{ security_scans_base_dir }} -maxdepth 2 -name "*.xml" -not -name "*.gz" -exec gzip {} \; 2>/dev/null || true
    find {{ security_scans_base_dir }} -maxdepth 2 -name "*.html" -not -name "*.gz" -exec gzip {} \; 2>/dev/null || true
  when:
    - security_scans_retention_enabled | bool
    - security_scans_compress_files | bool
  changed_when: false
  become: true
