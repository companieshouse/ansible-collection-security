---
- name: Check temp directory contains the exepected files
  ansible.builtin.stat:
    path: "{{ security_scans_temp_scan_dir.path }}/{{ item }}"
  loop:
    - lynis.report
    - oscap.xml
    - oscap.html
  register: security_scans_scan_files

- name: Fail if temp directory is missing files
  ansible.builtin.fail:
    msg: "Scan incomplete. Missing files: {{ security_scans_scan_files.results | selectattr('stat.exists', 'equalto', false) | map(attribute='item') | list }}"
  when: (security_scans_scan_files.results | selectattr('stat.exists', 'equalto', true) | list | length) != (security_scans_scan_files.results | length)

- name: Re-run clean of completed scans if at retention limit
  ansible.builtin.shell: |
    set -o pipefail
    cd {{ security_scans_base_dir }}
    count=$(ls -dt [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]/ 2>/dev/null | wc -l)
    if [ "$count" -ge {{ security_scans_retention_count }} ]; then
      ls -dt [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]_[0-9][0-9][0-9][0-9][0-9][0-9]/ 2>/dev/null | tail -1 | xargs rm -rf 2>/dev/null || true
    fi
  when: security_scans_retention_enabled | bool
  changed_when: false
  become: true
  args:
    executable: /bin/bash

- name: Rename temp folder and store as a completed scan
  ansible.builtin.command: >
    mv "{{ security_scans_temp_scan_dir.path }}" "{{ security_scans_base_dir }}/{{ security_scans_datetime }}"
  become: true
  changed_when: true
